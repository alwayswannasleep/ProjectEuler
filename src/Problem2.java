/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *                          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem2 {
    private static final int MAX_NUMBER = 4_000_000;

    public static void main(String[] args) {
        int[] fibonacciArr = new int[]{1, 2, 0};

        int index = 2;
        int sum = 2;
        int lastFibonacciNumber = fibonacciArr[index];
        while (lastFibonacciNumber < MAX_NUMBER) {
            fibonacciArr[index] = fibonacciArr[(index + 1) % 3] + fibonacciArr[(index + 2) % 3];
            lastFibonacciNumber = fibonacciArr[index];

            if (lastFibonacciNumber % 2 == 0) {
                sum += lastFibonacciNumber;
            }

            index = (index + 1) % 3;
        }

        System.out.println(sum);
    }
}
